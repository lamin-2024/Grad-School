// Name:  Ron Kalin, Date: 5-31-24, Design: Lesson3A3P2: 7-seg display 2 digits   	
// Group: Ron Kalin/Lamin Jammeh _____	

//4-bit comparator
module comp4bit(eq, gr, ls, a, b);
    input [3:0] a, b; // 4-bit inputs
    output eq, gr, ls; // Output signals

    assign eq = (a == b) ? 1 : 0; // Equal condition
    assign gr = (a > b) ? 1 : 0; // Greater than condition
    assign ls = (a < b) ? 1 : 0; // Less than condition
endmodule

//4-bit wide 2 to 1 multiplexer
module mux2to1_4bit(
    input [3:0] data0, // 4-bit input data 0
    input [3:0] data1, // 4-bit input data 1
    input select,      // Select signal (0 or 1), z
    output reg [3:0] out // 4-bit output
);
    always @ (data0, data1)  //put input only in sensitivity list
        if (select)  //select = 1
            out = data1;  //data1 from circuit A
        else
            out = data0;  //data from V
    end
endmodule 

//Circuit A
module CircuitA (
 input [3:0] V, // Input V 4-bit word
 output reg [3:0] A ); // output 4-bit word

    always @ (V)
       case (V)
            4'b1010: A = 4'b0000; // 9 returns 0
            4'b1011: A = 4'b0001; // 10 returns 1
				4'b1011: A = 4'b0001; // 10 returns 1
            4'b1111: A = 4'b0101; // 15 returns 5
            4'b0011: A = 4'b0011; // 3
            4'b0100: bcd = 4'b0100; // 4
            4'b1011: bcd = 4'b0101; // 5
            4'b1100: bcd = 4'b0110; // 6
            4'b1101: bcd = 4'b0111; // 7
            4'b1110: bcd = 4'b1000; // 8
            4'b1111: bcd = 4'b1001; // 9
            default: bcd = 4'b1111; // Default to unique value so invalid input code can be recognized
        endcase
// Alternative description is given below
//assign bcd = (weighted2421 < 5) ? weighted2421 : weighted2421 - 6;
 

endmodule








// 7-segment display	
module Seven_Seg_Display ( output reg [6:0] Display, //output is the display abc_defg	
                           input  [3:0] BCD); //input BCD	
//                             abc_defg (seven segments, not including decimcal point)	
parameter      BLANK      = 7'b111_1111;  //blank	
parameter      ZERO       = 7'b000_0001;  //h01 hexadecimal 1st 3-digits = 0 = 000	
parameter      ONE        = 7'b100_1111;  //h4F hexadecimal 2nd 4-digits = F = 1111	
parameter      TWO        = 7'b001_0010;  //h12	
parameter      THREE      = 7'b000_0110;  //h06	
parameter      FOUR       = 7'b100_1100;  //h4c	
parameter      FIVE       = 7'b010_0100;  //h24	
parameter      SIX        = 7'b010_0000;  //h20	
parameter      SEVEN      = 7'b000_1111;  //h0f	
parameter      EIGHT      = 7'b000_0000;  //h00	
parameter      NINE       = 7'b000_0100;  //h04	
always @ (BCD)	
  case (BCD) //BCD is 	
   0:          Display = ZERO;	
	1:          Display = ONE;
	2:          Display = TWO;
	3:          Display = THREE;
	4:          Display = FOUR;
	5:          Display = FIVE;
	6:          Display = SIX;
	7:          Display = SEVEN;
	8:          Display = EIGHT;
	9:          Display = NINE;
	default:    Display = BLANK;
  endcase	
endmodule	
