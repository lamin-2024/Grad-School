`timescale 1ns / 1ps

module tb_moore_down_counter;
    // Inputs
    reg clk;
    reg reset;
    reg enable;

    // Outputs
    wire [3:0] count;

    // Instantiate the Unit Under Test (UUT)
    moore_down_counter uut (
        .clk(clk),
        .reset(reset),
        .enable(enable),
        .count(count)
    );

    // Clock generation
    always #5 clk = ~clk; // 10ns clock period

    initial begin
        // Initialize Inputs
        clk = 0;
        reset = 0;
        enable = 0;

        // Wait for 20ns for global reset to finish
        #20;
        reset = 1; // Release reset

        // Apply enable signal and observe the count
        #10; enable = 1;

        // Wait for some clock cycles
        #100;

        // Disable enable signal
        #10; enable = 0;

        // Wait for some clock cycles
        #50;

        // Apply reset signal again
        #10; reset = 0;

        // Wait for some clock cycles
        #20; reset = 1;

        // Re-enable the counter
        #10; enable = 1;

        // Wait for some clock cycles
        #100;

        // Finish the simulation
        $finish;
    end

    initial begin
        // Monitor signals
        $monitor("Time: %0t | Reset: %b | Enable: %b | Count: %b", $time, reset, enable, count);
    end

endmodule
